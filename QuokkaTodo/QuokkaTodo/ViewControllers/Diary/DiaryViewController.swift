//
//  DiaryViewController.swift
//  QuokkaTodo
//
//  Created by Ïù¥Ïú†ÏßÑ on 10/20/23.
//

import UIKit
import RealmSwift

class DiaryViewController: BaseViewController {
    let diaryRepository = DiaryRepository()
    var diaryArray: Results<Diary>?
//    var diaryArray = ["Ïò§Îäò ÏïÑÏπ®Ïóê ÏÇ∞Ï±ÖÌïòÎ©¥ÏÑú ÎßëÏùÄ Í≥µÍ∏∞Î•º Îß°ÏïÑ ÌñâÎ≥µÌñàÎã§.ü§é","Ïò§Îäò Ïò§ÎûúÎßåÏóê Ï§ëÌïôÍµê ÏπúÍµ¨Îì§ ÎßåÎÇòÏÑú ÎÜÄÏïòÎã§!! Î∞©Ïñ¥ÌöåüêüÎ•º Î®πÏñ¥ÏÑú Í∏∞Î∂ÑÏù¥ Ï¢ãÎã§!","Í≥µÏõêÏóê ÏïâÏïÑ ÏûàÏóàÎäîÎç∞ Í∞ïÏïÑÏßÄÍ∞Ä Í∞ëÏûêÍ∏∞ ÎÇòÌïúÌÖå Îõ∞Ïñ¥ÏôîÎã§.Í∑∏Îü∞Îç∞ ÏòÜÏóê Îàà Îï°Í∑∏ÎûÄ Í∑ÄÏó¨Ïö¥ ÏïÑÍ∏∞ÎèÑ ÎÇòÌïúÌÖå ÏôÄÏÑú ÏïÑÍ∞ÄÎûë Í∞ïÏïÑÏßÄÍ∞Ä  Í∞ôÏù¥ ÏûàÏóàÎäîÎç∞ Îëò Îã§ ÎÑàÎ¨¥ Í∑ÄÏó¨ÏõåÏÑú ÌñâÎ≥µÌñàÎã§! ><","Ïò§Îäò Í≥ÑÌöç Ìïú ÏùºÏùÑ Îã§ ÎÅùÎÇ¥ÏÑú Í∏∞Î∂ÑÏù¥ Ï¢ãÎã§.üòÜ","Í≥µÏõêÏóê ÏïâÏïÑ ÏûàÏóàÎäîÎç∞ Í∞ïÏïÑÏßÄÍ∞Ä Í∞ëÏûêÍ∏∞ ÎÇòÌïúÌÖå Îõ∞Ïñ¥ÏôîÎã§.Í∑∏Îü∞Îç∞ ÏòÜÏóê Îàà Îï°Í∑∏ÎûÄ Í∑ÄÏó¨Ïö¥ ÏïÑÍ∏∞ÎèÑ ÎÇòÌïúÌÖå ÏôÄÏÑú ÏïÑÍ∞ÄÎûë Í∞ïÏïÑÏßÄÍ∞Ä  Í∞ôÏù¥ ÏûàÏóàÎäîÎç∞ Îëò Îã§ ÎÑàÎ¨¥ Í∑ÄÏó¨ÏõåÏÑú ÌñâÎ≥µÌñàÎã§! ><","Í≥µÏõêÏóê ÏïâÏïÑ ÏûàÏóàÎäîÎç∞ Í∞ïÏïÑÏßÄÍ∞Ä Í∞ëÏûêÍ∏∞ ÎÇòÌïúÌÖå Îõ∞Ïñ¥ÏôîÎã§.Í∑∏Îü∞Îç∞ ÏòÜÏóê Îàà Îï°Í∑∏ÎûÄ Í∑ÄÏó¨Ïö¥ ÏïÑÍ∏∞ÎèÑ ÎÇòÌïúÌÖå ÏôÄÏÑú ÏïÑÍ∞ÄÎûë Í∞ïÏïÑÏßÄÍ∞Ä  Í∞ôÏù¥ ÏûàÏóàÎäîÎç∞ Îëò Îã§ ÎÑàÎ¨¥ Í∑ÄÏó¨ÏõåÏÑú ÌñâÎ≥µÌñàÎã§! ><","Í≥µÏõêÏóê ÏïâÏïÑ ÏûàÏóàÎäîÎç∞ Í∞ïÏïÑÏßÄÍ∞Ä Í∞ëÏûêÍ∏∞ ÎÇòÌïúÌÖå Îõ∞Ïñ¥ÏôîÎã§.Í∑∏Îü∞Îç∞ ÏòÜÏóê Îàà Îï°Í∑∏ÎûÄ Í∑ÄÏó¨Ïö¥ ÏïÑÍ∏∞ÎèÑ ÎÇòÌïúÌÖå ÏôÄÏÑú ÏïÑÍ∞ÄÎûë Í∞ïÏïÑÏßÄÍ∞Ä  Í∞ôÏù¥ ÏûàÏóàÎäîÎç∞ Îëò Îã§ ÎÑàÎ¨¥ Í∑ÄÏó¨ÏõåÏÑú ÌñâÎ≥µÌñàÎã§! ><","Ï¢ãÏïòÎã§"]
    private let diaryTableView = {
        let view = UITableView()
        view.separatorStyle = .none
        view.rowHeight = UITableView.automaticDimension
        view.estimatedRowHeight = 500
        return view
    }()
    private let diaryLockedImageView = {
        let view = UIImageView()
        view.image = UIImage(named: "img_locked_diary")
        return view
    }()

    override func viewDidLoad() {
        super.viewDidLoad()
    }
    override func configureView() {
        navigationItem.title = "Ïò¨Ìï¥Ïùò ÌñâÎ≥µ ÏùºÍ∏∞ü§é"
        view.backgroundColor = QColor.backgroundColor
        diaryTableView.register(DiaryTableViewCell.self, forCellReuseIdentifier: DiaryTableViewCell.identifier)
        diaryTableView.delegate = self
        diaryTableView.dataSource = self
        
        
        diaryArray = diaryRepository.fetchAll()
    }
    override func setConstraints() {
        view.addSubviews([diaryTableView,diaryLockedImageView])
        
        diaryTableView.snp.makeConstraints { make in
            make.edges.equalTo(view.safeAreaLayoutGuide)
        }
        diaryLockedImageView.snp.makeConstraints { make in
            make.edges.equalTo(view.safeAreaLayoutGuide)
        }
    }
    

}

extension DiaryViewController: UITableViewDelegate,UITableViewDataSource{
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell  = tableView.dequeueReusableCell(withIdentifier: DiaryTableViewCell.identifier, for: indexPath) as? DiaryTableViewCell else {return UITableViewCell()}
        cell.setData(item: diaryArray?[indexPath.row] ?? Diary())
        
        return cell
    }

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return diaryArray?.count ?? 0
    }
}
